/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiSplatRouteImport } from './routes/api/$'
import { Route as AuthenticatedAppRouteImport } from './routes/_authenticated/app'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/admin'
import { Route as AuthenticatedAppIndexRouteImport } from './routes/_authenticated/app/index'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'
import { Route as AuthenticatedContestIdRouteImport } from './routes/_authenticated/contest/$id'
import { Route as AuthenticatedAdminParticipantRouteImport } from './routes/_authenticated/admin/participant'
import { Route as AuthenticatedAdminLanguagesRouteImport } from './routes/_authenticated/admin/languages'
import { Route as AuthenticatedAdminConfigurationRouteImport } from './routes/_authenticated/admin/configuration'
import { Route as AuthenticatedContestIdIndexRouteImport } from './routes/_authenticated/contest/$id/index'
import { Route as AuthenticatedAdminContestIndexRouteImport } from './routes/_authenticated/admin/contest/index'
import { Route as AuthenticatedContestIdSubmissionRouteImport } from './routes/_authenticated/contest/$id/submission'
import { Route as AuthenticatedContestIdProblemRouteImport } from './routes/_authenticated/contest/$id/problem'
import { Route as AuthenticatedContestIdLeaderboardRouteImport } from './routes/_authenticated/contest/$id/leaderboard'
import { Route as AuthenticatedAppSubmissionIdRouteImport } from './routes/_authenticated/app/submission/$id'
import { Route as AuthenticatedAdminContestNewRouteImport } from './routes/_authenticated/admin/contest/new'
import { Route as AuthenticatedAdminContestIdRouteImport } from './routes/_authenticated/admin/contest/$id'
import { Route as AuthenticatedContestIdProblemIndexRouteImport } from './routes/_authenticated/contest/$id/problem/index'
import { Route as AuthenticatedAdminContestIdIndexRouteImport } from './routes/_authenticated/admin/contest/$id/index'
import { Route as AuthenticatedContestIdProblemProblemRouteImport } from './routes/_authenticated/contest/$id/problem/$problem'
import { Route as AuthenticatedAdminContestIdSettingsRouteImport } from './routes/_authenticated/admin/contest/$id/settings'
import { Route as AuthenticatedAdminContestIdProblemIndexRouteImport } from './routes/_authenticated/admin/contest/$id/problem/index'
import { Route as AuthenticatedAdminContestIdProblemNewRouteImport } from './routes/_authenticated/admin/contest/$id/problem/new'
import { Route as AuthenticatedAdminContestIdProblemProblemRouteImport } from './routes/_authenticated/admin/contest/$id/problem/$problem'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAppRoute = AuthenticatedAppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminRoute = AuthenticatedAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAppIndexRoute = AuthenticatedAppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAppRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedContestIdRoute = AuthenticatedContestIdRouteImport.update({
  id: '/contest/$id',
  path: '/contest/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminParticipantRoute =
  AuthenticatedAdminParticipantRouteImport.update({
    id: '/participant',
    path: '/participant',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedAdminLanguagesRoute =
  AuthenticatedAdminLanguagesRouteImport.update({
    id: '/languages',
    path: '/languages',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedAdminConfigurationRoute =
  AuthenticatedAdminConfigurationRouteImport.update({
    id: '/configuration',
    path: '/configuration',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedContestIdIndexRoute =
  AuthenticatedContestIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedContestIdRoute,
  } as any)
const AuthenticatedAdminContestIndexRoute =
  AuthenticatedAdminContestIndexRouteImport.update({
    id: '/contest/',
    path: '/contest/',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedContestIdSubmissionRoute =
  AuthenticatedContestIdSubmissionRouteImport.update({
    id: '/submission',
    path: '/submission',
    getParentRoute: () => AuthenticatedContestIdRoute,
  } as any)
const AuthenticatedContestIdProblemRoute =
  AuthenticatedContestIdProblemRouteImport.update({
    id: '/problem',
    path: '/problem',
    getParentRoute: () => AuthenticatedContestIdRoute,
  } as any)
const AuthenticatedContestIdLeaderboardRoute =
  AuthenticatedContestIdLeaderboardRouteImport.update({
    id: '/leaderboard',
    path: '/leaderboard',
    getParentRoute: () => AuthenticatedContestIdRoute,
  } as any)
const AuthenticatedAppSubmissionIdRoute =
  AuthenticatedAppSubmissionIdRouteImport.update({
    id: '/submission/$id',
    path: '/submission/$id',
    getParentRoute: () => AuthenticatedAppRoute,
  } as any)
const AuthenticatedAdminContestNewRoute =
  AuthenticatedAdminContestNewRouteImport.update({
    id: '/contest/new',
    path: '/contest/new',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedAdminContestIdRoute =
  AuthenticatedAdminContestIdRouteImport.update({
    id: '/contest/$id',
    path: '/contest/$id',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)
const AuthenticatedContestIdProblemIndexRoute =
  AuthenticatedContestIdProblemIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedContestIdProblemRoute,
  } as any)
const AuthenticatedAdminContestIdIndexRoute =
  AuthenticatedAdminContestIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminContestIdRoute,
  } as any)
const AuthenticatedContestIdProblemProblemRoute =
  AuthenticatedContestIdProblemProblemRouteImport.update({
    id: '/$problem',
    path: '/$problem',
    getParentRoute: () => AuthenticatedContestIdProblemRoute,
  } as any)
const AuthenticatedAdminContestIdSettingsRoute =
  AuthenticatedAdminContestIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedAdminContestIdRoute,
  } as any)
const AuthenticatedAdminContestIdProblemIndexRoute =
  AuthenticatedAdminContestIdProblemIndexRouteImport.update({
    id: '/problem/',
    path: '/problem/',
    getParentRoute: () => AuthenticatedAdminContestIdRoute,
  } as any)
const AuthenticatedAdminContestIdProblemNewRoute =
  AuthenticatedAdminContestIdProblemNewRouteImport.update({
    id: '/problem/new',
    path: '/problem/new',
    getParentRoute: () => AuthenticatedAdminContestIdRoute,
  } as any)
const AuthenticatedAdminContestIdProblemProblemRoute =
  AuthenticatedAdminContestIdProblemProblemRouteImport.update({
    id: '/problem/$problem',
    path: '/problem/$problem',
    getParentRoute: () => AuthenticatedAdminContestIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof AuthenticatedAdminRouteWithChildren
  '/app': typeof AuthenticatedAppRouteWithChildren
  '/api/$': typeof ApiSplatRoute
  '/admin/configuration': typeof AuthenticatedAdminConfigurationRoute
  '/admin/languages': typeof AuthenticatedAdminLanguagesRoute
  '/admin/participant': typeof AuthenticatedAdminParticipantRoute
  '/contest/$id': typeof AuthenticatedContestIdRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/app/': typeof AuthenticatedAppIndexRoute
  '/admin/contest/$id': typeof AuthenticatedAdminContestIdRouteWithChildren
  '/admin/contest/new': typeof AuthenticatedAdminContestNewRoute
  '/app/submission/$id': typeof AuthenticatedAppSubmissionIdRoute
  '/contest/$id/leaderboard': typeof AuthenticatedContestIdLeaderboardRoute
  '/contest/$id/problem': typeof AuthenticatedContestIdProblemRouteWithChildren
  '/contest/$id/submission': typeof AuthenticatedContestIdSubmissionRoute
  '/admin/contest': typeof AuthenticatedAdminContestIndexRoute
  '/contest/$id/': typeof AuthenticatedContestIdIndexRoute
  '/admin/contest/$id/settings': typeof AuthenticatedAdminContestIdSettingsRoute
  '/contest/$id/problem/$problem': typeof AuthenticatedContestIdProblemProblemRoute
  '/admin/contest/$id/': typeof AuthenticatedAdminContestIdIndexRoute
  '/contest/$id/problem/': typeof AuthenticatedContestIdProblemIndexRoute
  '/admin/contest/$id/problem/$problem': typeof AuthenticatedAdminContestIdProblemProblemRoute
  '/admin/contest/$id/problem/new': typeof AuthenticatedAdminContestIdProblemNewRoute
  '/admin/contest/$id/problem': typeof AuthenticatedAdminContestIdProblemIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/api/$': typeof ApiSplatRoute
  '/admin/configuration': typeof AuthenticatedAdminConfigurationRoute
  '/admin/languages': typeof AuthenticatedAdminLanguagesRoute
  '/admin/participant': typeof AuthenticatedAdminParticipantRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/app': typeof AuthenticatedAppIndexRoute
  '/admin/contest/new': typeof AuthenticatedAdminContestNewRoute
  '/app/submission/$id': typeof AuthenticatedAppSubmissionIdRoute
  '/contest/$id/leaderboard': typeof AuthenticatedContestIdLeaderboardRoute
  '/contest/$id/submission': typeof AuthenticatedContestIdSubmissionRoute
  '/admin/contest': typeof AuthenticatedAdminContestIndexRoute
  '/contest/$id': typeof AuthenticatedContestIdIndexRoute
  '/admin/contest/$id/settings': typeof AuthenticatedAdminContestIdSettingsRoute
  '/contest/$id/problem/$problem': typeof AuthenticatedContestIdProblemProblemRoute
  '/admin/contest/$id': typeof AuthenticatedAdminContestIdIndexRoute
  '/contest/$id/problem': typeof AuthenticatedContestIdProblemIndexRoute
  '/admin/contest/$id/problem/$problem': typeof AuthenticatedAdminContestIdProblemProblemRoute
  '/admin/contest/$id/problem/new': typeof AuthenticatedAdminContestIdProblemNewRoute
  '/admin/contest/$id/problem': typeof AuthenticatedAdminContestIdProblemIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/admin': typeof AuthenticatedAdminRouteWithChildren
  '/_authenticated/app': typeof AuthenticatedAppRouteWithChildren
  '/api/$': typeof ApiSplatRoute
  '/_authenticated/admin/configuration': typeof AuthenticatedAdminConfigurationRoute
  '/_authenticated/admin/languages': typeof AuthenticatedAdminLanguagesRoute
  '/_authenticated/admin/participant': typeof AuthenticatedAdminParticipantRoute
  '/_authenticated/contest/$id': typeof AuthenticatedContestIdRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/app/': typeof AuthenticatedAppIndexRoute
  '/_authenticated/admin/contest/$id': typeof AuthenticatedAdminContestIdRouteWithChildren
  '/_authenticated/admin/contest/new': typeof AuthenticatedAdminContestNewRoute
  '/_authenticated/app/submission/$id': typeof AuthenticatedAppSubmissionIdRoute
  '/_authenticated/contest/$id/leaderboard': typeof AuthenticatedContestIdLeaderboardRoute
  '/_authenticated/contest/$id/problem': typeof AuthenticatedContestIdProblemRouteWithChildren
  '/_authenticated/contest/$id/submission': typeof AuthenticatedContestIdSubmissionRoute
  '/_authenticated/admin/contest/': typeof AuthenticatedAdminContestIndexRoute
  '/_authenticated/contest/$id/': typeof AuthenticatedContestIdIndexRoute
  '/_authenticated/admin/contest/$id/settings': typeof AuthenticatedAdminContestIdSettingsRoute
  '/_authenticated/contest/$id/problem/$problem': typeof AuthenticatedContestIdProblemProblemRoute
  '/_authenticated/admin/contest/$id/': typeof AuthenticatedAdminContestIdIndexRoute
  '/_authenticated/contest/$id/problem/': typeof AuthenticatedContestIdProblemIndexRoute
  '/_authenticated/admin/contest/$id/problem/$problem': typeof AuthenticatedAdminContestIdProblemProblemRoute
  '/_authenticated/admin/contest/$id/problem/new': typeof AuthenticatedAdminContestIdProblemNewRoute
  '/_authenticated/admin/contest/$id/problem/': typeof AuthenticatedAdminContestIdProblemIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/admin'
    | '/app'
    | '/api/$'
    | '/admin/configuration'
    | '/admin/languages'
    | '/admin/participant'
    | '/contest/$id'
    | '/api/auth/$'
    | '/admin/'
    | '/app/'
    | '/admin/contest/$id'
    | '/admin/contest/new'
    | '/app/submission/$id'
    | '/contest/$id/leaderboard'
    | '/contest/$id/problem'
    | '/contest/$id/submission'
    | '/admin/contest'
    | '/contest/$id/'
    | '/admin/contest/$id/settings'
    | '/contest/$id/problem/$problem'
    | '/admin/contest/$id/'
    | '/contest/$id/problem/'
    | '/admin/contest/$id/problem/$problem'
    | '/admin/contest/$id/problem/new'
    | '/admin/contest/$id/problem'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/api/$'
    | '/admin/configuration'
    | '/admin/languages'
    | '/admin/participant'
    | '/api/auth/$'
    | '/admin'
    | '/app'
    | '/admin/contest/new'
    | '/app/submission/$id'
    | '/contest/$id/leaderboard'
    | '/contest/$id/submission'
    | '/admin/contest'
    | '/contest/$id'
    | '/admin/contest/$id/settings'
    | '/contest/$id/problem/$problem'
    | '/admin/contest/$id'
    | '/contest/$id/problem'
    | '/admin/contest/$id/problem/$problem'
    | '/admin/contest/$id/problem/new'
    | '/admin/contest/$id/problem'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/admin'
    | '/_authenticated/app'
    | '/api/$'
    | '/_authenticated/admin/configuration'
    | '/_authenticated/admin/languages'
    | '/_authenticated/admin/participant'
    | '/_authenticated/contest/$id'
    | '/api/auth/$'
    | '/_authenticated/admin/'
    | '/_authenticated/app/'
    | '/_authenticated/admin/contest/$id'
    | '/_authenticated/admin/contest/new'
    | '/_authenticated/app/submission/$id'
    | '/_authenticated/contest/$id/leaderboard'
    | '/_authenticated/contest/$id/problem'
    | '/_authenticated/contest/$id/submission'
    | '/_authenticated/admin/contest/'
    | '/_authenticated/contest/$id/'
    | '/_authenticated/admin/contest/$id/settings'
    | '/_authenticated/contest/$id/problem/$problem'
    | '/_authenticated/admin/contest/$id/'
    | '/_authenticated/contest/$id/problem/'
    | '/_authenticated/admin/contest/$id/problem/$problem'
    | '/_authenticated/admin/contest/$id/problem/new'
    | '/_authenticated/admin/contest/$id/problem/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  ApiSplatRoute: typeof ApiSplatRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/app': {
      id: '/_authenticated/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthenticatedAppRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/app/': {
      id: '/_authenticated/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AuthenticatedAppIndexRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/contest/$id': {
      id: '/_authenticated/contest/$id'
      path: '/contest/$id'
      fullPath: '/contest/$id'
      preLoaderRoute: typeof AuthenticatedContestIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/admin/participant': {
      id: '/_authenticated/admin/participant'
      path: '/participant'
      fullPath: '/admin/participant'
      preLoaderRoute: typeof AuthenticatedAdminParticipantRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/admin/languages': {
      id: '/_authenticated/admin/languages'
      path: '/languages'
      fullPath: '/admin/languages'
      preLoaderRoute: typeof AuthenticatedAdminLanguagesRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/admin/configuration': {
      id: '/_authenticated/admin/configuration'
      path: '/configuration'
      fullPath: '/admin/configuration'
      preLoaderRoute: typeof AuthenticatedAdminConfigurationRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/contest/$id/': {
      id: '/_authenticated/contest/$id/'
      path: '/'
      fullPath: '/contest/$id/'
      preLoaderRoute: typeof AuthenticatedContestIdIndexRouteImport
      parentRoute: typeof AuthenticatedContestIdRoute
    }
    '/_authenticated/admin/contest/': {
      id: '/_authenticated/admin/contest/'
      path: '/contest'
      fullPath: '/admin/contest'
      preLoaderRoute: typeof AuthenticatedAdminContestIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/contest/$id/submission': {
      id: '/_authenticated/contest/$id/submission'
      path: '/submission'
      fullPath: '/contest/$id/submission'
      preLoaderRoute: typeof AuthenticatedContestIdSubmissionRouteImport
      parentRoute: typeof AuthenticatedContestIdRoute
    }
    '/_authenticated/contest/$id/problem': {
      id: '/_authenticated/contest/$id/problem'
      path: '/problem'
      fullPath: '/contest/$id/problem'
      preLoaderRoute: typeof AuthenticatedContestIdProblemRouteImport
      parentRoute: typeof AuthenticatedContestIdRoute
    }
    '/_authenticated/contest/$id/leaderboard': {
      id: '/_authenticated/contest/$id/leaderboard'
      path: '/leaderboard'
      fullPath: '/contest/$id/leaderboard'
      preLoaderRoute: typeof AuthenticatedContestIdLeaderboardRouteImport
      parentRoute: typeof AuthenticatedContestIdRoute
    }
    '/_authenticated/app/submission/$id': {
      id: '/_authenticated/app/submission/$id'
      path: '/submission/$id'
      fullPath: '/app/submission/$id'
      preLoaderRoute: typeof AuthenticatedAppSubmissionIdRouteImport
      parentRoute: typeof AuthenticatedAppRoute
    }
    '/_authenticated/admin/contest/new': {
      id: '/_authenticated/admin/contest/new'
      path: '/contest/new'
      fullPath: '/admin/contest/new'
      preLoaderRoute: typeof AuthenticatedAdminContestNewRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/admin/contest/$id': {
      id: '/_authenticated/admin/contest/$id'
      path: '/contest/$id'
      fullPath: '/admin/contest/$id'
      preLoaderRoute: typeof AuthenticatedAdminContestIdRouteImport
      parentRoute: typeof AuthenticatedAdminRoute
    }
    '/_authenticated/contest/$id/problem/': {
      id: '/_authenticated/contest/$id/problem/'
      path: '/'
      fullPath: '/contest/$id/problem/'
      preLoaderRoute: typeof AuthenticatedContestIdProblemIndexRouteImport
      parentRoute: typeof AuthenticatedContestIdProblemRoute
    }
    '/_authenticated/admin/contest/$id/': {
      id: '/_authenticated/admin/contest/$id/'
      path: '/'
      fullPath: '/admin/contest/$id/'
      preLoaderRoute: typeof AuthenticatedAdminContestIdIndexRouteImport
      parentRoute: typeof AuthenticatedAdminContestIdRoute
    }
    '/_authenticated/contest/$id/problem/$problem': {
      id: '/_authenticated/contest/$id/problem/$problem'
      path: '/$problem'
      fullPath: '/contest/$id/problem/$problem'
      preLoaderRoute: typeof AuthenticatedContestIdProblemProblemRouteImport
      parentRoute: typeof AuthenticatedContestIdProblemRoute
    }
    '/_authenticated/admin/contest/$id/settings': {
      id: '/_authenticated/admin/contest/$id/settings'
      path: '/settings'
      fullPath: '/admin/contest/$id/settings'
      preLoaderRoute: typeof AuthenticatedAdminContestIdSettingsRouteImport
      parentRoute: typeof AuthenticatedAdminContestIdRoute
    }
    '/_authenticated/admin/contest/$id/problem/': {
      id: '/_authenticated/admin/contest/$id/problem/'
      path: '/problem'
      fullPath: '/admin/contest/$id/problem'
      preLoaderRoute: typeof AuthenticatedAdminContestIdProblemIndexRouteImport
      parentRoute: typeof AuthenticatedAdminContestIdRoute
    }
    '/_authenticated/admin/contest/$id/problem/new': {
      id: '/_authenticated/admin/contest/$id/problem/new'
      path: '/problem/new'
      fullPath: '/admin/contest/$id/problem/new'
      preLoaderRoute: typeof AuthenticatedAdminContestIdProblemNewRouteImport
      parentRoute: typeof AuthenticatedAdminContestIdRoute
    }
    '/_authenticated/admin/contest/$id/problem/$problem': {
      id: '/_authenticated/admin/contest/$id/problem/$problem'
      path: '/problem/$problem'
      fullPath: '/admin/contest/$id/problem/$problem'
      preLoaderRoute: typeof AuthenticatedAdminContestIdProblemProblemRouteImport
      parentRoute: typeof AuthenticatedAdminContestIdRoute
    }
  }
}

interface AuthenticatedAdminContestIdRouteChildren {
  AuthenticatedAdminContestIdSettingsRoute: typeof AuthenticatedAdminContestIdSettingsRoute
  AuthenticatedAdminContestIdIndexRoute: typeof AuthenticatedAdminContestIdIndexRoute
  AuthenticatedAdminContestIdProblemProblemRoute: typeof AuthenticatedAdminContestIdProblemProblemRoute
  AuthenticatedAdminContestIdProblemNewRoute: typeof AuthenticatedAdminContestIdProblemNewRoute
  AuthenticatedAdminContestIdProblemIndexRoute: typeof AuthenticatedAdminContestIdProblemIndexRoute
}

const AuthenticatedAdminContestIdRouteChildren: AuthenticatedAdminContestIdRouteChildren =
  {
    AuthenticatedAdminContestIdSettingsRoute:
      AuthenticatedAdminContestIdSettingsRoute,
    AuthenticatedAdminContestIdIndexRoute:
      AuthenticatedAdminContestIdIndexRoute,
    AuthenticatedAdminContestIdProblemProblemRoute:
      AuthenticatedAdminContestIdProblemProblemRoute,
    AuthenticatedAdminContestIdProblemNewRoute:
      AuthenticatedAdminContestIdProblemNewRoute,
    AuthenticatedAdminContestIdProblemIndexRoute:
      AuthenticatedAdminContestIdProblemIndexRoute,
  }

const AuthenticatedAdminContestIdRouteWithChildren =
  AuthenticatedAdminContestIdRoute._addFileChildren(
    AuthenticatedAdminContestIdRouteChildren,
  )

interface AuthenticatedAdminRouteChildren {
  AuthenticatedAdminConfigurationRoute: typeof AuthenticatedAdminConfigurationRoute
  AuthenticatedAdminLanguagesRoute: typeof AuthenticatedAdminLanguagesRoute
  AuthenticatedAdminParticipantRoute: typeof AuthenticatedAdminParticipantRoute
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminContestIdRoute: typeof AuthenticatedAdminContestIdRouteWithChildren
  AuthenticatedAdminContestNewRoute: typeof AuthenticatedAdminContestNewRoute
  AuthenticatedAdminContestIndexRoute: typeof AuthenticatedAdminContestIndexRoute
}

const AuthenticatedAdminRouteChildren: AuthenticatedAdminRouteChildren = {
  AuthenticatedAdminConfigurationRoute: AuthenticatedAdminConfigurationRoute,
  AuthenticatedAdminLanguagesRoute: AuthenticatedAdminLanguagesRoute,
  AuthenticatedAdminParticipantRoute: AuthenticatedAdminParticipantRoute,
  AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
  AuthenticatedAdminContestIdRoute:
    AuthenticatedAdminContestIdRouteWithChildren,
  AuthenticatedAdminContestNewRoute: AuthenticatedAdminContestNewRoute,
  AuthenticatedAdminContestIndexRoute: AuthenticatedAdminContestIndexRoute,
}

const AuthenticatedAdminRouteWithChildren =
  AuthenticatedAdminRoute._addFileChildren(AuthenticatedAdminRouteChildren)

interface AuthenticatedAppRouteChildren {
  AuthenticatedAppIndexRoute: typeof AuthenticatedAppIndexRoute
  AuthenticatedAppSubmissionIdRoute: typeof AuthenticatedAppSubmissionIdRoute
}

const AuthenticatedAppRouteChildren: AuthenticatedAppRouteChildren = {
  AuthenticatedAppIndexRoute: AuthenticatedAppIndexRoute,
  AuthenticatedAppSubmissionIdRoute: AuthenticatedAppSubmissionIdRoute,
}

const AuthenticatedAppRouteWithChildren =
  AuthenticatedAppRoute._addFileChildren(AuthenticatedAppRouteChildren)

interface AuthenticatedContestIdProblemRouteChildren {
  AuthenticatedContestIdProblemProblemRoute: typeof AuthenticatedContestIdProblemProblemRoute
  AuthenticatedContestIdProblemIndexRoute: typeof AuthenticatedContestIdProblemIndexRoute
}

const AuthenticatedContestIdProblemRouteChildren: AuthenticatedContestIdProblemRouteChildren =
  {
    AuthenticatedContestIdProblemProblemRoute:
      AuthenticatedContestIdProblemProblemRoute,
    AuthenticatedContestIdProblemIndexRoute:
      AuthenticatedContestIdProblemIndexRoute,
  }

const AuthenticatedContestIdProblemRouteWithChildren =
  AuthenticatedContestIdProblemRoute._addFileChildren(
    AuthenticatedContestIdProblemRouteChildren,
  )

interface AuthenticatedContestIdRouteChildren {
  AuthenticatedContestIdLeaderboardRoute: typeof AuthenticatedContestIdLeaderboardRoute
  AuthenticatedContestIdProblemRoute: typeof AuthenticatedContestIdProblemRouteWithChildren
  AuthenticatedContestIdSubmissionRoute: typeof AuthenticatedContestIdSubmissionRoute
  AuthenticatedContestIdIndexRoute: typeof AuthenticatedContestIdIndexRoute
}

const AuthenticatedContestIdRouteChildren: AuthenticatedContestIdRouteChildren =
  {
    AuthenticatedContestIdLeaderboardRoute:
      AuthenticatedContestIdLeaderboardRoute,
    AuthenticatedContestIdProblemRoute:
      AuthenticatedContestIdProblemRouteWithChildren,
    AuthenticatedContestIdSubmissionRoute:
      AuthenticatedContestIdSubmissionRoute,
    AuthenticatedContestIdIndexRoute: AuthenticatedContestIdIndexRoute,
  }

const AuthenticatedContestIdRouteWithChildren =
  AuthenticatedContestIdRoute._addFileChildren(
    AuthenticatedContestIdRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRoute: typeof AuthenticatedAdminRouteWithChildren
  AuthenticatedAppRoute: typeof AuthenticatedAppRouteWithChildren
  AuthenticatedContestIdRoute: typeof AuthenticatedContestIdRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRoute: AuthenticatedAdminRouteWithChildren,
  AuthenticatedAppRoute: AuthenticatedAppRouteWithChildren,
  AuthenticatedContestIdRoute: AuthenticatedContestIdRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  ApiSplatRoute: ApiSplatRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
